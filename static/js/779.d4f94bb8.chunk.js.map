{"version":3,"file":"static/js/779.d4f94bb8.chunk.js","mappings":"uSAEaA,EAAcC,EAAAA,GAAAA,GAAH,6LAQXC,EAAaD,EAAAA,GAAAA,EAAH,kE,SC+BvB,EAnCgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGA,IAAMM,EAAO,mCAAG,WAAMN,GAAN,iGAEOO,EAAAA,EAAAA,IAAWP,GAFlB,OAENQ,EAFM,OAGZJ,GAAe,OAAII,EAAKC,UAHZ,gDAKZC,EAAAA,OAAAA,MAAa,wBALD,yDAAH,sDAQbJ,EAAQN,MACP,CAACA,KAGF,SAACH,EAAD,UAC0B,IAAvBM,EAAYQ,OACXR,EAAYS,KAAI,SAAAC,GAAC,OACf,2BACE,UAACd,EAAD,sBAAqBc,EAAEC,WACvB,uBAAID,EAAEE,YAFCF,EAAEG,QAMb,+C,0MCjCFC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFACIF,IAAAA,IAAUE,GADd,cACbC,EADa,gBAEAA,EAASC,KAFT,cAEbA,EAFa,yBAGZA,GAHY,2CAAH,sDAMLC,EAAS,mCAAG,oGAEfC,EAFe,qCAEsBP,EAFtB,oBAGRE,EAAaK,GAHL,wEAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,uFAEjBN,EAFiB,+BAEcP,EAFd,kBAE+BY,EAF/B,oBAGVV,EAAaK,GAHH,wEAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH,wDASXI,EAAU,mCAAG,WAAMf,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,oBAEeC,EAFf,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVpB,EAAU,mCAAG,WAAMS,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,4BAEuBC,EAFvB,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVK,EAAU,mCAAG,WAAMhB,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,4BAEuBC,EAFvB,4BAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,uD,+EC3CR,SAASM,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/API.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  /* display: grid;\n  max-width: calc(100vw - 96px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px; */\n\n  list-style: none;\n`;\nexport const AuthorName = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport { getReviews } from 'services/API';\nimport { ReviewsList, AuthorName } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getData = async movieId => {\n      try {\n        const resp = await getReviews(movieId);\n        setReviewsData([...resp.results]);\n      } catch (error) {\n        Notify.error('Something went wrong');\n      }\n    };\n    getData(movieId);\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {reviewsData.length !== 0 ? (\n        reviewsData.map(r => (\n          <li key={r.id}>\n            <AuthorName>Author: {r.author}</AuthorName>\n            <p>{r.content}</p>\n          </li>\n        ))\n      ) : (\n        <li>No reviews yet</li>\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getFilmsData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `trending/movie/day?api_key=${API_KEY}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearched = async (searchQuery, page) => {\n  try {\n    const link = `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `/movie/${id}?api_key=${API_KEY}&page=1&language=us-en`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const link = `/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const link = `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ReviewsList","styled","AuthorName","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getData","getReviews","resp","results","Notify","length","map","r","author","content","id","API_KEY","axios","getFilmsData","searchLink","response","data","getTrends","link","console","log","message","getSearched","searchQuery","page","getDetails","getCredits","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}