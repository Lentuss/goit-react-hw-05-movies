{"version":3,"file":"static/js/441.05506119.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/API.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesItems = styled.ul`\n  list-style: square;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #4b4453;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MoviesItems, MovieLink } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies, prevPath }) => {\n  const location = useLocation();\n  return (\n    <MoviesItems>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <MovieLink to={prevPath + movie.id} state={{ from: location }}>\n            <h3>{movie.title}</h3>\n          </MovieLink>\n        </li>\n      ))}\n    </MoviesItems>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12px 24px;\n  color: #fff;\n  background-color: #b39cd0;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/751/751381.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const FormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Notify } from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  FormContainer,\n  SearchForm,\n  SearchButton,\n  FormLabel,\n  SearchInput,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const queryValue = searchQuery.get('query') ?? '';\n\n  const handleInput = e => {\n    if (e.currentTarget.value.toLowerCase() !== searchQuery)\n      setSearchQuery({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (queryValue.trim() === '') {\n      Notify.info('Enter the query');\n      return;\n    }\n\n    onSubmit(queryValue);\n  };\n\n  return (\n    <FormContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchButton type=\"submit\">\n          <FormLabel>Search</FormLabel>\n        </SearchButton>\n        movie search\n        <SearchInput\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"query\"\n          value={queryValue}\n          onChange={handleInput}\n        />\n      </SearchForm>\n    </FormContainer>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 10px;\n  min-height: 100vh;\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: square;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #4b4453;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport Searchbar from 'components/Searchbar';\nimport MoviesList from 'components/MoviesList';\nimport { getSearched } from 'services/API';\nimport { Container } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const resp = await getSearched(query);\n        setMovies([...resp.results]);\n      } catch (error) {\n        Notify.error('Something went wrong');\n      }\n    };\n\n    if (query !== '') {\n      getData();\n    }\n  }, [query]);\n\n  const getQuery = query => {\n    setQuery(query);\n  };\n\n  const prevPath = '';\n\n  return (\n    <>\n      <Searchbar onSubmit={getQuery} />\n      <Container>\n        {movies.length !== 0 ? (\n          <MoviesList movies={movies} prevPath={prevPath} />\n        ) : (\n          query !== '' && <p>Nothing found. Try again</p>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getFilmsData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `trending/movie/day?api_key=${API_KEY}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearched = async (searchQuery, page) => {\n  try {\n    const link = `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `/movie/${id}?api_key=${API_KEY}&page=1&language=us-en`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const link = `/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const link = `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MoviesItems","styled","MovieLink","Link","movies","prevPath","location","useLocation","map","movie","to","id","state","from","title","FormContainer","SearchForm","SearchButton","FormLabel","SearchInput","onSubmit","useSearchParams","searchQuery","setSearchQuery","queryValue","get","e","preventDefault","trim","Notify","type","autocomplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","query","Container","searchParams","useState","setQuery","setMovies","useEffect","getData","getSearched","resp","results","length","MoviesList","API_KEY","axios","getFilmsData","searchLink","response","data","getTrends","link","console","log","message","page","getDetails","getReviews","getCredits","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}