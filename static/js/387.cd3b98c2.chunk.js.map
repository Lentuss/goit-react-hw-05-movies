{"version":3,"file":"static/js/387.cd3b98c2.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,GAAAA,GAAH,uLASRC,EAAgBD,EAAAA,GAAAA,IAAH,6OAabE,EAAWF,EAAAA,GAAAA,IAAH,2CAIRG,EAAYH,EAAAA,GAAAA,GAAH,kEAKTI,EAAiBJ,EAAAA,GAAAA,EAAH,wF,6BC8B3B,EAhDa,WACX,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGA,IAAMM,EAAO,mCAAG,WAAMN,GAAN,mGAEOO,EAAAA,EAAAA,IAAWP,GAFlB,OAENQ,EAFM,OAGNC,EAAOD,EAAKC,KAClBL,GAAa,OAAIK,IAJL,gDAMZC,EAAAA,OAAAA,MAAa,wBAND,yDAAH,sDASbJ,EAAQN,MACP,CAACA,KAGF,SAACN,EAAD,UACGS,EAAUQ,KAAI,SAAAC,GAAC,OACd,yBACE,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IACqB,OAAnBD,EAAEE,aACE,sCACA,sDACAF,EAAEE,aAERC,IAAKH,EAAEI,KACPC,MAAM,SAER,SAACnB,EAAD,UAAYc,EAAEI,QACd,UAACjB,EAAD,yBAA4Ba,EAAEM,iBAbzBN,EAAEO,W,0MCpCbC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFACIF,IAAAA,IAAUE,GADd,cACbC,EADa,gBAEAA,EAASC,KAFT,cAEbA,EAFa,yBAGZA,GAHY,2CAAH,sDAMLC,EAAS,mCAAG,oGAEfC,EAFe,qCAEsBP,EAFtB,oBAGRE,EAAaK,GAHL,wEAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,uFAEjBN,EAFiB,+BAEcP,EAFd,kBAE+BY,EAF/B,oBAGVV,EAAaK,GAHH,wEAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH,wDASXI,EAAU,mCAAG,WAAMf,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,oBAEeC,EAFf,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVK,EAAU,mCAAG,WAAMhB,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,4BAEuBC,EAFvB,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVvB,EAAU,mCAAG,WAAMY,GAAN,uFAEhBQ,EAFgB,iBAECR,EAFD,4BAEuBC,EAFvB,4BAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,uD,+EC3CR,SAASM,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/API.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 96px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n\n  list-style: none;\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  height: 420px;\n\n  padding: 10px;\n\n  border-radius: 5px;\n  box-shadow: 2px 2px 5px 5px rgba(113, 129, 161, 0.51);\n`;\n\nexport const ActorImg = styled.img`\n  display: block;\n`;\n\nexport const ActorName = styled.h3`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const ActorCharacter = styled.p`\n  color: forestgreen;\n  margin-top: auto;\n  font-size: 14px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nimport {\n  CastList,\n  CardContainer,\n  ActorImg,\n  ActorName,\n  ActorCharacter,\n} from './Cast.styled';\n\nimport { getCredits } from 'services/API';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castItems, setCastItems] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const getData = async movieId => {\n      try {\n        const resp = await getCredits(movieId);\n        const cast = resp.cast;\n        setCastItems([...cast]);\n      } catch (error) {\n        Notify.error('Something went wrong');\n      }\n    };\n    getData(movieId);\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {castItems.map(i => (\n        <li key={i.id}>\n          <CardContainer>\n            <ActorImg\n              src={\n                i.profile_path === null\n                  ? 'https://via.placeholder.com/200x300'\n                  : 'https://www.themoviedb.org/t/p/w300_and_h450_bestv2' +\n                    i.profile_path\n              }\n              alt={i.name}\n              width=\"200\"\n            />\n            <ActorName>{i.name}</ActorName>\n            <ActorCharacter>Character: {i.character}</ActorCharacter>\n          </CardContainer>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getFilmsData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `trending/movie/day?api_key=${API_KEY}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearched = async (searchQuery, page) => {\n  try {\n    const link = `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `/movie/${id}?api_key=${API_KEY}&page=1&language=us-en`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const link = `/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const link = `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["CastList","styled","CardContainer","ActorImg","ActorName","ActorCharacter","movieId","useParams","useState","castItems","setCastItems","useEffect","getData","getCredits","resp","cast","Notify","map","i","src","profile_path","alt","name","width","character","id","API_KEY","axios","getFilmsData","searchLink","response","data","getTrends","link","console","log","message","getSearched","searchQuery","page","getDetails","getReviews","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}