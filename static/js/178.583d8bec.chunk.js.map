{"version":3,"file":"static/js/178.583d8bec.chunk.js","mappings":"8SAIaA,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,OACE,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAUC,MAAO,CAAEC,KAAMH,GAAlC,2B,mBCVKI,EAAYC,EAAAA,GAAAA,IAAH,8CAITC,EAAOD,EAAAA,GAAAA,IAAH,wEAKJE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uLAUPI,EAAUJ,EAAAA,GAAAA,IAAH,0CAIPK,EAAML,EAAAA,GAAAA,IAAH,2CAIHM,EAAaN,EAAAA,GAAAA,IAAH,8DAKVO,EAAQP,EAAAA,GAAAA,GAAH,+DAKLQ,EAAWR,EAAAA,GAAAA,EAAH,yFAMRS,EAAcT,EAAAA,GAAAA,EAAH,+CAIXU,EAAQV,EAAAA,GAAAA,EAAH,2CAILW,EAASX,EAAAA,GAAAA,EAAH,+CCiCnB,EAlEqB,WAAO,IAAD,IACnBY,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMvB,EAAQ,oBAAGiB,EAASf,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAEzCqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMN,GAAN,iGAEOO,EAAAA,EAAAA,IAAWP,GAFlB,OAENQ,EAFM,OAGZJ,EAASI,GAHG,gDAKZC,EAAAA,OAAAA,MAAa,wBALD,yDAAH,sDAQbH,EAAQN,KACP,CAACA,IAEJ,IAMMU,EANY,WAChB,GAAqB,IAAjBP,EAAMQ,OAER,OADeR,EAAMS,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QACjCC,KAAK,MAGDC,GACtB,OACE,UAAChC,EAAD,YACE,SAACE,EAAD,WACE,SAACC,EAAD,CAASN,GAAID,EAAb,uBAEgB,IAAjBsB,EAAMQ,SACL,UAACrB,EAAD,YACE,SAACC,EAAD,CACE2B,IACEf,EAAMgB,YACF,uDACAhB,EAAMgB,YACN,sCAENC,IAAKjB,EAAMkB,SAEb,UAAC7B,EAAD,YACE,UAACC,EAAD,WACGU,EAAMkB,MACNlB,EAAMmB,eACL,0BAAO,KAAOnB,EAAMmB,aAAaC,MAAM,EAAG,GAAK,UAGnD,UAAC5B,EAAD,0BACe6B,OAAOC,SAA8B,GAArBtB,EAAMuB,cADrC,QAGA,SAAChC,EAAD,wBACA,SAACE,EAAD,UAAQO,EAAMwB,YACd,SAACjC,EAAD,sBACA,SAACG,EAAD,UAASa,WAIf,SAAC9B,EAAD,CAAcC,SAAUA,KACxB,SAAC,EAAA+C,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,W,0MC/EFC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAY,mCAAG,WAAMC,GAAN,yFACIF,IAAAA,IAAUE,GADd,cACbC,EADa,gBAEAA,EAASC,KAFT,cAEbA,EAFa,yBAGZA,GAHY,2CAAH,sDAMLC,EAAS,mCAAG,oGAEfC,EAFe,qCAEsBP,EAFtB,oBAGRE,EAAaK,GAHL,wEAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,uFAEjBN,EAFiB,+BAEcP,EAFd,kBAE+BY,EAF/B,oBAGVV,EAAaK,GAHH,wEAKvBC,QAAQC,IAAI,KAAMC,SALK,yDAAH,wDASXjC,EAAU,mCAAG,WAAMqC,GAAN,uFAEhBP,EAFgB,iBAECO,EAFD,oBAEed,EAFf,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVK,EAAU,mCAAG,WAAMD,GAAN,uFAEhBP,EAFgB,iBAECO,EAFD,4BAEuBd,EAFvB,mCAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,sDASVM,EAAU,mCAAG,WAAMF,GAAN,uFAEhBP,EAFgB,iBAECO,EAFD,4BAEuBd,EAFvB,4BAGTE,EAAaK,GAHJ,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH","sources":["components/Additionally/Additionally.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const Additionally = ({ backPath }) => {\n  return (\n    <ul>\n      <li>\n        <Link to=\"cast\" state={{ from: backPath }}>\n          Cast\n        </Link>\n      </li>\n      <li>\n        <Link to=\"reviews\" state={{ from: backPath }}>\n          Reviews\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nAdditionally.propTypes = {\n  backPath: PropTypes.any.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n`;\n\nexport const Back = styled.div`\n  background-color: #b39cd0;\n  padding: 10px;\n`;\n\nexport const BackBtn = styled(Link)`\n  display: block;\n  text-align: center;\n  width: 100px;\n  padding: 5px;\n  border-radius: 5px;\n  border-color: transparent;\n  background-color: #fbeaff;\n`;\n\nexport const Details = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  display: block;\n`;\n\nexport const Attributes = styled.div`\n  padding: 20px;\n  font-size: 18px;\n`;\n\nexport const Title = styled.h3`\n  color: #00c9a7;\n  font-size: 30px;\n`;\n\nexport const AttrName = styled.p`\n  font-size: 22px;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nexport const VoteAverage = styled.p`\n  font-style: italic;\n`;\n\nexport const About = styled.p`\n  color: #4b4453;\n`;\n\nexport const Genres = styled.p`\n  font-style: italic;\n`;\n","import React, { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { getDetails } from 'services/API';\nimport { Additionally } from 'components/Additionally/Additionally';\n\nimport {\n  Container,\n  Details,\n  Back,\n  BackBtn,\n  Img,\n  Attributes,\n  Title,\n  AttrName,\n  VoteAverage,\n  About,\n  Genres,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const backPath = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getData = async movieId => {\n      try {\n        const resp = await getDetails(movieId);\n        setMovie(resp);\n      } catch (error) {\n        Notify.error('Something went wrong');\n      }\n    };\n    getData(movieId);\n  }, [movieId]);\n\n  const getGenres = () => {\n    if (movie.length !== 0) {\n      const genres = movie.genres.map(genre => genre.name);\n      return genres.join(', ');\n    }\n  };\n  const genresContent = getGenres();\n  return (\n    <Container>\n      <Back>\n        <BackBtn to={backPath}>Go back</BackBtn>\n      </Back>\n      {movie.length !== 0 && (\n        <Details>\n          <Img\n            src={\n              movie.poster_path\n                ? 'https://www.themoviedb.org/t/p/w300_and_h450_bestv2/' +\n                  movie.poster_path\n                : 'https://via.placeholder.com/300x450'\n            }\n            alt={movie.title}\n          />\n          <Attributes>\n            <Title>\n              {movie.title}\n              {movie.release_date && (\n                <span>{' (' + movie.release_date.slice(0, 4) + ')'}</span>\n              )}\n            </Title>\n            <VoteAverage>\n              User score: {Number.parseInt(movie.vote_average * 10)}%\n            </VoteAverage>\n            <AttrName>Overview</AttrName>\n            <About>{movie.overview}</About>\n            <AttrName>Genres</AttrName>\n            <Genres>{genresContent}</Genres>\n          </Attributes>\n        </Details>\n      )}\n      <Additionally backPath={backPath} />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getFilmsData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `trending/movie/day?api_key=${API_KEY}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getSearched = async (searchQuery, page) => {\n  try {\n    const link = `search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `/movie/${id}?api_key=${API_KEY}&page=1&language=us-en`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const link = `/movie/${id}/reviews?api_key=${API_KEY}&page=1&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getCredits = async id => {\n  try {\n    const link = `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    return await getFilmsData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Additionally","backPath","to","state","from","Container","styled","Back","BackBtn","Link","Details","Img","Attributes","Title","AttrName","VoteAverage","About","Genres","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","getData","getDetails","resp","Notify","genresContent","length","genres","map","genre","name","join","getGenres","src","poster_path","alt","title","release_date","slice","Number","parseInt","vote_average","overview","Suspense","fallback","API_KEY","axios","getFilmsData","searchLink","response","data","getTrends","link","console","log","message","getSearched","searchQuery","page","id","getReviews","getCredits"],"sourceRoot":""}